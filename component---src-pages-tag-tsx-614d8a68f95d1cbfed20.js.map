{"version":3,"sources":["webpack:///./src/pages/tag.tsx"],"names":["Tag","edges","data","allMarkdownRemark","tags","Map","forEach","edge","node","frontmatter","tag","count","get","undefined","set","countTaggedPosts","Array","from","entries","sort","a","b","localeCompare","sortedTags","map","key","to","query"],"mappings":"6FAAA,sIAiCe,SAASA,EAAT,GAA8E,IAArCC,EAAqC,EAAhEC,KAAOC,kBAAoBF,MAChDG,EAAO,IAAIC,IAGjB,OAFAJ,EAAMK,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYL,KAAKE,QAjBnD,SAA0BF,GACxB,OAAO,SAAAM,GACL,IAAMC,EAAQP,EAAKQ,IAAIF,GACVG,MAATF,EACFP,EAAKU,IAAIJ,EAAK,GAEdN,EAAKU,IAAIJ,EAAKC,EAAQ,IAW+BI,CAAiBX,OAGxE,kBAAC,IAAD,KATJ,SAAoBA,GAClB,OAAOY,MAAMC,KAAKb,EAAKc,WAAWC,MAAK,kBAAEC,EAAF,KAAQC,EAAR,YAAgBD,EAAEE,cAAcD,MASlEE,CAAWnB,GAAMoB,KAAI,gBAAEd,EAAF,KAAOC,EAAP,YAAkB,uBAAGc,IAAKf,GAAK,kBAAC,OAAD,CAAMgB,GAAE,QAAUhB,GAAQA,GAAvC,KAAqDC,EAArD,SAKvC,IAAMgB,EAAQ","file":"component---src-pages-tag-tsx-614d8a68f95d1cbfed20.js","sourcesContent":["import React, {ReactElement} from 'react';\nimport {graphql, Link} from 'gatsby';\nimport Layout from '../components/layout/layout';\n\ntype QueryResult = {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          frontmatter: {\n            tags: string[];\n          };\n        };\n      }[];\n    };\n  };\n}\n\nfunction countTaggedPosts(tags: Map<string, number>): (tag: string) => void {\n  return tag => {\n    const count = tags.get(tag);\n    if (count == undefined) {\n      tags.set(tag, 1);\n    } else {\n      tags.set(tag, count + 1);\n    }\n  };\n}\n\nfunction sortedTags(tags: Map<string, number>): [string, number][] {\n  return Array.from(tags.entries()).sort(([a,], [b,]) => a.localeCompare(b));\n}\n\nexport default function Tag({data: {allMarkdownRemark: {edges}}}: QueryResult): ReactElement {\n  const tags = new Map<string, number>();\n  edges.forEach(edge => edge.node.frontmatter.tags.forEach(countTaggedPosts(tags)));\n\n  return (\n    <Layout>\n      {sortedTags(tags).map(([tag, count]) => <p key={tag}><Link to={`/tag/${tag}`}>{tag}</Link> ({count})</p>)}\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}