{"version":3,"sources":["webpack:///./src/utils/map-util.ts","webpack:///./src/components/tag-list/tag-list.tsx","webpack:///./src/components/blog-post-header/blog-post-header.tsx","webpack:///./src/components/blog-post-header/blog-post-header.module.scss","webpack:///./src/templates/blog-post/blog-post.module.scss","webpack:///./src/components/navigation-footer/navigation-footer.tsx","webpack:///./src/templates/blog-post/blog-post.tsx","webpack:///./src/components/navigation-footer/navigation-footer.module.scss"],"names":["get","values","key","error","value","undefined","TagList","tags","edges","useStaticQuery","allSitePage","slugs","Map","map","edge","node","context","tag","slug","sort","a","b","localeCompare","sorted","name","Fragment","to","k","Error","BlogPostHeader","props","title","part","series___title","className","styles","date","series","module","exports","NavigationFooter","prev","next","BlogPost","data","markdownRemark","frontmatter","fields","html","pageContext","previous","subtitle","footer","dangerouslySetInnerHTML","__html","query"],"mappings":"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","file":"component---src-templates-blog-post-blog-post-tsx-eb9ae0c7299e6bf5c1a6.js","sourcesContent":["export function get<K, V>(values: Map<K, V>, key: K, error: (key: K) => unknown): V {\n  const value = values.get(key);\n  if (value === undefined) {\n    throw error(key);\n  }\n  return value;\n}","import {graphql, Link, useStaticQuery} from 'gatsby';\nimport React, {ReactElement} from 'react';\nimport {get} from '../../utils/map-util';\n\ntype TagListProps = {\n  tags: string[];\n};\n\nconst query = graphql`\n{\n  allSitePage(filter: {context: {tag: {ne: null}}}) {\n    edges {\n      node {\n        context {\n          tag\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\ntype QueryResult = {\n  allSitePage: {\n    edges: {\n      node: {\n        context: {\n          tag: string;\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nexport default function TagList({tags}: TagListProps): ReactElement {\n  const {allSitePage: {edges}}: QueryResult = useStaticQuery(query);\n  const slugs = new Map<string, string>(edges.map(edge => [edge.node.context.tag, edge.node.context.slug]));\n\n  return (\n    <>{sorted(tags).map(name => tag(name, get(slugs, name, k => Error(`Unknown tag name: ${k}`))))}</>\n  );\n}\n\nfunction sorted(tags: string[]): string[] {\n  return tags.sort((a, b) => a.localeCompare(b));\n}\n\nfunction tag(name: string, slug: string): ReactElement {\n  return (\n    <React.Fragment key={name}>\n      <Link to={slug}>\n        #{name}\n      </Link>\n      {' '}\n    </React.Fragment>\n  );\n}","import React, {ReactElement} from 'react';\nimport {graphql, Link, useStaticQuery} from 'gatsby';\nimport * as styles from '../blog-post-header/blog-post-header.module.scss';\nimport TagList from '../tag-list/tag-list';\nimport {get} from '../../utils/map-util';\n\nexport type BlogPostHeaderProps = {\n  slug: string;\n  title: string;\n  series: null | {\n    title: string;\n    part: number;\n  };\n  tags: string[];\n  date: string;\n};\n\nconst query = graphql`\n{\n  allSitePage(filter: {context: {series___title: {ne: null}}}) {\n    edges {\n      node {\n        context {\n          series___title\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\ntype QueryResult = {\n  allSitePage: {\n    edges: {\n      node: {\n        context: {\n          series___title: string;\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nexport default function BlogPostHeader(props: BlogPostHeaderProps): ReactElement {\n  const {allSitePage: {edges}}: QueryResult = useStaticQuery(query);\n  const slugs = new Map<string, string>(edges.map(edge => [edge.node.context.series___title, edge.node.context.slug]));\n\n  return (\n    <header className={styles.header}>\n      <Link className={styles.title} to={props.slug}>\n        <h2>{props.title}</h2>\n      </Link>\n      <div className={styles.subtitle}>\n        <span className={styles.date}>{props.date}</span>\n        {props.series === null ? <></> : Series(props.series.title, props.series.part, get(slugs, props.series.title, k => Error(`Unknown series title: ${k}`)))}\n        <span>\n          <TagList tags={props.tags}/>\n        </span>\n      </div>\n    </header>\n  );\n}\n\nfunction Series(title: string, part: number, slug: string): ReactElement {\n  return (\n    <span className={styles.series}>\n      Part {part} of&nbsp;\n      <Link to={slug}>\n        {title}\n      </Link>\n    </span>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"blog-post-header-module--header--2gWNG\",\"title\":\"blog-post-header-module--title--1sK2E\",\"subtitle\":\"blog-post-header-module--subtitle--2wyKz\",\"date\":\"blog-post-header-module--date--1nczg\",\"series\":\"blog-post-header-module--series--10njw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"blog-post-module--container--3dgR0\",\"article\":\"blog-post-module--article--1zd5P\"};","import * as styles from './navigation-footer.module.scss';\nimport {Link} from 'gatsby';\nimport React, {ReactElement} from 'react';\n\ntype NavigationFooterProps = {\n  prev: null | {\n    slug: string;\n    title: string;\n  };\n  next: null | {\n    slug: string;\n    title: string;\n  };\n}\n\nexport default function NavigationFooter({prev, next}: NavigationFooterProps): ReactElement {\n  return (\n    <div className={styles.container}>\n      {prev == null ? <></> : <Link className={styles.prev} to={prev.slug}>← {prev.title}</Link>}\n      {next == null ? <></> : <Link className={styles.next} to={next.slug}>{next.title} →</Link>}\n    </div>\n  );\n}","import React, {ReactElement} from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout/layout';\nimport NavigationFooter from '../../components/navigation-footer/navigation-footer';\nimport * as styles from './blog-post.module.scss';\nimport BlogPostHeader from '../../components/blog-post-header/blog-post-header';\n\nimport 'katex/dist/katex.min.css';\n\ntype QueryResult = {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        series: null | {\n          title: string;\n          part: number;\n        };\n        date: string;\n        tags: string[];\n      };\n      fields: {\n        slug: string;\n      };\n      html: string;\n    };\n  };\n\n  pageContext: {\n    previous: {\n      fields: {\n        slug: string;\n      };\n      frontmatter: {\n        title: string;\n      };\n    };\n    next: {\n      fields: {\n        slug: string;\n      };\n      frontmatter: {\n        title: string;\n      };\n    };\n  }\n}\n\nexport default function BlogPost({data: {markdownRemark: {frontmatter, fields, html}}, pageContext}: QueryResult): ReactElement {\n  const prev = pageContext.previous == null ? null : {\n    slug: pageContext.previous.fields.slug,\n    title: pageContext.previous.frontmatter.title,\n  };\n  const next = pageContext.next == null ? null : {\n    slug: pageContext.next.fields.slug,\n    title: pageContext.next.frontmatter.title,\n  };\n\n  return (\n    <Layout subtitle={frontmatter.title} footer={<NavigationFooter prev={prev} next={next}/>}>\n      <div className={styles.container}>\n        <article>\n          <BlogPostHeader\n            slug={fields.slug}\n            title={frontmatter.title}\n            series={frontmatter.series}\n            tags={frontmatter.tags}\n            date={frontmatter.date}\n          />\n          <div className={styles.article} dangerouslySetInnerHTML={{__html: html}}/>\n        </article>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        series {\n          title\n          part\n        }\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navigation-footer-module--container--2zAlS\",\"prev\":\"navigation-footer-module--prev--3uOGq\",\"next\":\"navigation-footer-module--next--2jgHj\"};"],"sourceRoot":""}