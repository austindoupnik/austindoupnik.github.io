{"version":3,"sources":["webpack:///./src/utils/map-util.ts","webpack:///./src/components/tag-list/tag-list.tsx","webpack:///./src/components/blog-post-header/blog-post-header.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/blog-post-header/blog-post-header.module.scss","webpack:///./src/components/blog-post-list/blog-post-list.module.scss","webpack:///./src/components/blog-post-list/blog-post-list.tsx"],"names":["get","values","key","error","value","undefined","TagList","tags","edges","useStaticQuery","allSitePage","slugs","Map","map","edge","node","context","tag","slug","sort","a","b","localeCompare","sorted","name","Fragment","to","k","Error","BlogPostHeader","props","title","part","series___title","className","styles","date","series","Index","data","allMarkdownRemark","posts","query","module","exports","BlogPostList","i","fields","frontmatter","BlogPost"],"mappings":"8KAAO,SAASA,EAAUC,EAAmBC,EAAQC,GACnD,IAAMC,EAAQH,EAAOD,IAAIE,GACzB,QAAcG,IAAVD,EACF,MAAMD,EAAMD,GAEd,OAAOE,EC+BM,SAASE,EAAT,GAAqD,IAAnCC,EAAmC,EAAnCA,KACVC,EAAuBC,yBA7BhC,cA6BLC,YAAcF,MACfG,EAAQ,IAAIC,IAAoBJ,EAAMK,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKC,KAAKC,QAAQC,IAAKH,EAAKC,KAAKC,QAAQE,UAElG,OACE,oCAIJ,SAAgBX,GACd,OAAOA,EAAKY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MALtCE,CAAOhB,GAAMM,KAAI,SAAAW,GAAI,OAQ5B,SAAaA,EAAcN,GACzB,OACE,kBAAC,IAAMO,SAAP,CAAgBvB,IAAKsB,GACnB,kBAAC,OAAD,CAAME,GAAIR,GAAV,IACIM,GAEH,KAdyBP,CAAIO,EAAMxB,EAAIW,EAAOa,GAAM,SAAAG,GAAC,OAAIC,MAAM,qBAAqBD,WCI5E,SAASE,EAAeC,GAA0C,IAoBjEC,EAAeC,EAAcd,EAnBtBV,EAAuBC,yBA7BhC,cA6BLC,YAAcF,MACfG,EAAQ,IAAIC,IAAoBJ,EAAMK,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKC,KAAKC,QAAQiB,eAAgBnB,EAAKC,KAAKC,QAAQE,UAE7G,OACE,4BAAQgB,UAAWC,UACjB,kBAAC,OAAD,CAAMD,UAAWC,QAAcT,GAAII,EAAMZ,MACvC,4BAAKY,EAAMC,QAEb,yBAAKG,UAAWC,YACd,0BAAMD,UAAWC,QAAcL,EAAMM,MACnB,OAAjBN,EAAMO,OAAkB,sCASjBN,EATgCD,EAAMO,OAAON,MAS9BC,EATqCF,EAAMO,OAAOL,KASpCd,EAT0ClB,EAAIW,EAAOmB,EAAMO,OAAON,OAAO,SAAAJ,GAAC,OAAIC,MAAM,yBAAyBD,MAWtJ,0BAAMO,UAAWC,UAAjB,QACQH,EADR,OAEE,kBAAC,OAAD,CAAMN,GAAIR,GACPa,KAbD,8BACE,kBAACzB,EAAD,CAASC,KAAMuB,EAAMvB,Y,kCC1D/B,sIA4Be,SAAS+B,EAAT,GAAgF,IAArC9B,EAAqC,EAAhE+B,KAAOC,kBAAoBhC,MACxD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAciC,MAAOjC,KAKpB,IAAMkC,EAAQ,c,qBCnCrBC,EAAOC,QAAU,CAAC,OAAS,yCAAyC,MAAQ,wCAAwC,SAAW,2CAA2C,KAAO,uCAAuC,OAAS,2C,qBCAjOD,EAAOC,QAAU,CAAC,UAAY,4C,kCCD9B,mFAyBe,SAASC,EAAT,GAAgE,IAAzCJ,EAAyC,EAAzCA,MACpC,OACE,yBAAKP,UAAWC,aACbM,EAAM5B,KAAI,WAASiC,GAAT,OAKjB,SAAkBA,EAAlB,GAAsH,IAA/E5B,EAA+E,EAAxF6B,OAAS7B,KAA+E,IAAxE8B,YAAcjB,EAA0D,EAA1DA,MAAOM,EAAmD,EAAnDA,OAAQD,EAA2C,EAA3CA,KAAM7B,EAAqC,EAArCA,KAC/E,OACE,6BAASL,IAAK4C,GACZ,kBAAC,IAAD,CAAgB5B,KAAMA,EAAMa,MAAOA,EAAOM,OAAQA,EAAQ9B,KAAMA,EAAM6B,KAAMA,KARlDa,CAASH,EAAxB,EAAE/B","file":"component---src-pages-index-tsx-a3c6038dcf12f120075d.js","sourcesContent":["export function get<K, V>(values: Map<K, V>, key: K, error: (key: K) => unknown): V {\n  const value = values.get(key);\n  if (value === undefined) {\n    throw error(key);\n  }\n  return value;\n}","import {graphql, Link, useStaticQuery} from 'gatsby';\nimport React, {ReactElement} from 'react';\nimport {get} from '../../utils/map-util';\n\ntype TagListProps = {\n  tags: string[];\n};\n\nconst query = graphql`\n{\n  allSitePage(filter: {context: {tag: {ne: null}}}) {\n    edges {\n      node {\n        context {\n          tag\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\ntype QueryResult = {\n  allSitePage: {\n    edges: {\n      node: {\n        context: {\n          tag: string;\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nexport default function TagList({tags}: TagListProps): ReactElement {\n  const {allSitePage: {edges}}: QueryResult = useStaticQuery(query);\n  const slugs = new Map<string, string>(edges.map(edge => [edge.node.context.tag, edge.node.context.slug]));\n\n  return (\n    <>{sorted(tags).map(name => tag(name, get(slugs, name, k => Error(`Unknown tag name: ${k}`))))}</>\n  );\n}\n\nfunction sorted(tags: string[]): string[] {\n  return tags.sort((a, b) => a.localeCompare(b));\n}\n\nfunction tag(name: string, slug: string): ReactElement {\n  return (\n    <React.Fragment key={name}>\n      <Link to={slug}>\n        #{name}\n      </Link>\n      {' '}\n    </React.Fragment>\n  );\n}","import React, {ReactElement} from 'react';\nimport {graphql, Link, useStaticQuery} from 'gatsby';\nimport * as styles from '../blog-post-header/blog-post-header.module.scss';\nimport TagList from '../tag-list/tag-list';\nimport {get} from '../../utils/map-util';\n\nexport type BlogPostHeaderProps = {\n  slug: string;\n  title: string;\n  series: null | {\n    title: string;\n    part: number;\n  };\n  tags: string[];\n  date: string;\n};\n\nconst query = graphql`\n{\n  allSitePage(filter: {context: {series___title: {ne: null}}}) {\n    edges {\n      node {\n        context {\n          series___title\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\ntype QueryResult = {\n  allSitePage: {\n    edges: {\n      node: {\n        context: {\n          series___title: string;\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nexport default function BlogPostHeader(props: BlogPostHeaderProps): ReactElement {\n  const {allSitePage: {edges}}: QueryResult = useStaticQuery(query);\n  const slugs = new Map<string, string>(edges.map(edge => [edge.node.context.series___title, edge.node.context.slug]));\n\n  return (\n    <header className={styles.header}>\n      <Link className={styles.title} to={props.slug}>\n        <h2>{props.title}</h2>\n      </Link>\n      <div className={styles.subtitle}>\n        <span className={styles.date}>{props.date}</span>\n        {props.series === null ? <></> : Series(props.series.title, props.series.part, get(slugs, props.series.title, k => Error(`Unknown series title: ${k}`)))}\n        <span>\n          <TagList tags={props.tags}/>\n        </span>\n      </div>\n    </header>\n  );\n}\n\nfunction Series(title: string, part: number, slug: string): ReactElement {\n  return (\n    <span className={styles.series}>\n      Part {part} of&nbsp;\n      <Link to={slug}>\n        {title}\n      </Link>\n    </span>\n  );\n}","import React, {ReactElement} from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/layout/layout';\nimport BlogPostList from '../components/blog-post-list/blog-post-list';\n\ntype QueryResult = {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          frontmatter: {\n            title: string;\n            series: null | {\n              title: string;\n              part: number;\n            };\n            date: string;\n            tags: string[];\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n};\n\nexport default function Index({data: {allMarkdownRemark: {edges}}}: QueryResult): ReactElement {\n  return (\n    <Layout>\n      <BlogPostList posts={edges}/>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            series {\n              title\n              part\n            }\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"blog-post-header-module--header--2gWNG\",\"title\":\"blog-post-header-module--title--1sK2E\",\"subtitle\":\"blog-post-header-module--subtitle--2wyKz\",\"date\":\"blog-post-header-module--date--1nczg\",\"series\":\"blog-post-header-module--series--10njw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"blog-post-list-module--container--UlhTE\"};","import React, {ReactElement} from 'react';\nimport BlogPostHeader from '../blog-post-header/blog-post-header';\nimport * as styles from '../blog-post-list/blog-post-list.module.scss';\n\ntype BlogPostListProps = {\n  posts: {\n    node: BlogPostProps;\n  }[];\n};\n\ntype BlogPostProps = {\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    series: null | {\n      title: string;\n      part: number;\n    };\n    date: string;\n    tags: string[];\n  };\n};\n\nexport default function BlogPostList({posts}: BlogPostListProps): ReactElement {\n  return (\n    <div className={styles.container}>\n      {posts.map(({node}, i) => BlogPost(i, node))}\n    </div>\n  );\n}\n\nfunction BlogPost(i: number, {fields: {slug}, frontmatter: {title, series, date, tags}}: BlogPostProps): ReactElement {\n  return (\n    <article key={i}>\n      <BlogPostHeader slug={slug} title={title} series={series} tags={tags} date={date}/>\n    </article>\n  );\n}"],"sourceRoot":""}